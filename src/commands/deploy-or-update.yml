description: >
  Update an existing Zappa stage or deploy a new one.

parameters:
  all_stages:
    type: boolean
    default: false
    description: >
      Whether to deploy to all stages in the settings file.
  stage:
    type: string
    default: "dev"
    description: >
      The name of the Zappa stage to update or deploy to.

steps:
  - unless:
      condition: << parameters.all_stages >>
      steps:
        - run:
            name: Deploying to << parameters.stage >>
            command: |-
              set +e
              STATUS=$(pipenv run zappa status << parameters.stage >> -j 2>&1)
              set -e
              if [[ $(echo $STATUS | jq . 2>/dev/null) ]];
              then pipenv run zappa update << parameters.stage >>;
              elif [[ "$STATUS" == *"have you deployed yet?" ]];
              then pipenv run zappa deploy << parameters.stage >>;
              else echo "$STATUS\nUnknown error!" && exit 1
              fi

  - when:
      condition: << parameters.all_stages >>
      steps:
        - run:
            name: Deploying to all stages
            command: |-
              set +e
              STATUS=$(pipenv run zappa status --all -j 2>&1 >/dev/null)
              ALL_DEPLOYMENTS=$(cat zappa_settings.json | jq -r '. | keys | join(" ")')
              NEW_DEPLOYMENTS=$(echo $STATUS | awk '{
                if ( $0 '\!'~ /^Error: No Lambda.*deployed/ ) {
                  exit 1
                }
                else print $4
              }')
              STATUS_EXIT_CODE=$?
              NEW_DEPLOYMENT_COUNT=$(echo $NEW_DEPLOYMENTS | wc -w)
              TOTAL_DEPLOYMENT_COUNT=$(echo $ALL_DEPLOYMENTS | wc -w)
              set -e
              if [[ "$STATUS_EXIT_CODE" != "0" ]] then
                echo "$STATUS\nUnknown error!" && exit 1
              elif [[ "$NEW_DEPLOYMENT_COUNT" == "$TOTAL_DEPLOYMENT_COUNT" ]] then
                pipenv run zappa deploy --all
              elif [ "$NEW_DEPLOYMENT_COUNT" -gt "0" ]
                for DEPLOYMENT_NAME in $NEW_DEPLOYMENTS do
                  STAGE=$(echo $DEPLOYMENT_NAME | awk -F- '{print $NF}')
                  pipenv run zappa deploy $STAGE
                done
              fi
              pipenv run zappa update --all
