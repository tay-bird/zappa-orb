version: 2.1

orbs:
  cli: circleci/circleci-cli@0.1.2
  orb-tools: circleci/orb-tools@8.4.0
  zappa: borb/zappa@dev:test-channel

integration-filters: &integration-filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

commands:
  prepare_test:
    parameters:
      case:
        type: string
    steps:
      - run:
          name: Prepare test case << parameters.case >>
          command: |-
            circleci config process \
            tests/unit/manifest/<< parameters.case >>.yml > << parameters.case >>.yml
      - store_artifacts:
          path: << parameters.case >>.yml

jobs:
  run-unit-tests:
    docker:
      - image: circleci/python:3.6
    steps:
      - cli/install
      - checkout
      - run: pipenv install --dev
      - prepare_test:
          case: simple
      - prepare_test:
          case: executor
      - prepare_test:
          case: update_only
      - prepare_test:
          case: all_stages
      - run: pipenv run python -m unittest discover -s tests

workflows:
  lint-pack-validate-publish-dev:
    jobs:
      - orb-tools/lint:
          name: lint

      - orb-tools/pack:
          name: pack
          requires:
            - lint

      - orb-tools/publish:
          name: publish-test-channel
          attach-workspace: true
          checkout: false
          orb-ref: "borb/zappa@dev:test-channel"
          requires:
            - pack

      - orb-tools/publish:
          name: publish-branch-channel
          attach-workspace: true
          checkout: false
          orb-ref: "borb/zappa@dev:${CIRCLE_BRANCH}"
          requires:
            - pack

      - run-unit-tests:
          name: run-unit-tests
          requires:
            - publish-test-channel

      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-workflow
          ssh-fingerprints: "57:7b:eb:64:42:0c:30:9a:4d:12:29:57:0e:0e:13:3f"
          cleanup-tags: true
          requires:
            - run-unit-tests

  integration-tests:
    jobs:
      - zappa/zappa-deploy:
          stage: dev
          filters: *integration-filters
          pre-steps:
            - checkout
            - run:
                name: move-to-test-simple
                command: "cd tests/integration/test_simple"
            - run:
                name: install-moto-interceptor
                command: pipenv install
            - run:
                name: start-moto-interceptor
                command: "nohup pipenv run moto-interceptor &"
